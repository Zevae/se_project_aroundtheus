!function(){"use strict";class e{constructor(e,t,n){let{name:s,link:i}=e;this._name=s,this._link=i,this._cardSelector=t,this._handleImageClick=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeIcon())),this._cardElement.querySelector(".card__trash-button").addEventListener("click",(()=>this._handleDeleteCard())),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>this._handleImageClick(this._link,this._name)))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__title").textContent=this._name;const e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._config=e,this._formElement=t,this._submitButton=this._formElement.querySelector(this._config.submitButtonSelector),this._inactiveButtonClass=this._config.inactiveButtonClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_toggleButtonState(){this._inputList.some((e=>!e.validity.valid))?this.disableButton():this._buttonElement&&(this._buttonElement.disabled=!1,this._buttonElement.classList.remove(this._config.inactiveButtonClass))}_showInputError(e,t){const n=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._config.inputErrorClass),n.textContent=t,n.classList.add(this._config.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._config.inputErrorClass),t.textContent="",t.classList.remove(this._config.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners(),this._toggleButtonState()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}}class n{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscKey=this._handleEscKey.bind(this),this._handleOverlayClick=this._handleOverlayClick.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscKey),this._popupElement.addEventListener("mousedown",this._handleOverlayClick)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscKey),this._popupElement.removeEventListener("mousedown",this._handleOverlayClick)}_handleEscKey(e){"Escape"!==e.key&&"Esc"!==e.key||this.close()}_handleOverlayClick(e){e.target===this._popupElement&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>this.close()))}}class s extends n{constructor(e){let{popupSelector:t,handleFormSubmit:n}=e;super({popupSelector:t}),this._handleFormSubmit=n,this._form=this._popupElement.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){super.close(),this._form.reset()}}const i={inputSelector:".modal__input",submitButtonSelector:".modal__save--button",inactiveButtonClass:"modal__save_button--disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=document.forms["edit-profile-form"],r=document.forms["add-card-form"],a=o.querySelector(".modal__input_type_name"),l=o.querySelector(".modal__input_type_description"),c=document.querySelector("#profile-edit-btn"),d=document.querySelector(".profile__add-button");function _(t){return new e(t,"#card-template",((e,t)=>{p.open({name:t,link:e})})).getView()}const m=new t(i,o),u=new t(i,r);m.enableValidation(),u.enableValidation();const h=new class{constructor(e){let{nameSelector:t,jobSelector:n}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(n)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}}({nameSelector:".profile__title",jobSelector:".profile__description"}),p=new class extends n{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._image=this._popupElement.querySelector(".modal__image"),this._caption=this._popupElement.querySelector(".modal__description")}open(e){let{name:t,link:n}=e;this._image.src=n,this._image.alt=t,this._caption.textContent=t,super.open()}}({popupSelector:"#image-modal"});p.setEventListeners();const E=new s({popupSelector:"#edit-modal",handleFormSubmit:e=>{let{title:t,description:n}=e;h.setUserInfo(t,n),E.close()}});E.setEventListeners();const S=new s({popupSelector:"#add-modal",handleFormSubmit:e=>{const t=_({name:e.title,link:e.url});g.addItem(t),u.disableButton(),S.close()}});S.setEventListeners();const g=new class{constructor(e,t){let{items:n,renderer:s}=e;this._items=n,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=_(e);g.addItem(t)}},".cards__list");g.renderItems(),c.addEventListener("click",(()=>{const{name:e,job:t}=h.getUserInfo();a.value=e,l.value=t,m.resetValidation(),E.open()})),d.addEventListener("click",(()=>{u.resetValidation(),S.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBUSxHRHpCQyxnQkMrQm5DRSxFQUFZUSxjQUVacEMsRUFBZTNFLGlCQUFpQixTQUFTLEtBQ3ZDLE1BQU0sS0FBRWQsRUFBSSxJQUFFdUcsR0FBUU4sRUFBU0ssY0FDL0JmLEVBQVVOLE1BQVFqRixFQUNsQndGLEVBQVNQLE1BQVFzQixFQUNqQlIsRUFBcUJwQyxrQkFDckJtRCxFQUFpQjVDLE1BQU0sSUFHekJ3QixFQUFpQjVFLGlCQUFpQixTQUFTLEtBQ3pDa0YsRUFBcUJyQyxrQkFDckJzRCxFQUFpQi9DLE1BQU0sRyIsInNvdXJjZXMiOlsid2VicGFjazovL0Fyb3VuZCB0aGUgVVMvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL0Fyb3VuZCB0aGUgVVMvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL0Fyb3VuZCB0aGUgVVMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9Bcm91bmQgdGhlIFVTLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9Bcm91bmQgdGhlIFVTLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9Bcm91bmQgdGhlIFVTLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL0Fyb3VuZCB0aGUgVVMvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9Bcm91bmQgdGhlIFVTLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vQXJvdW5kIHRoZSBVUy8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoeyBuYW1lLCBsaW5rIH0sIGNhcmRTZWxlY3RvciwgaGFuZGxlSW1hZ2VDbGljaykge1xyXG4gICAgdGhpcy5fbmFtZSA9IG5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gbGluaztcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xyXG4gIH1cclxuXHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXHJcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5faGFuZGxlTGlrZUljb24oKSk7XHJcblxyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdHJhc2gtYnV0dG9uXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCgpKTtcclxuXHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+XHJcbiAgICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayh0aGlzLl9saW5rLCB0aGlzLl9uYW1lKVxyXG4gICAgICApO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUxpa2VJY29uKCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIilcclxuICAgICAgLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlRGVsZXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgZ2V0VmlldygpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuXHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuICAgIGNvbnN0IGNhcmRJbWFnZSA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XHJcbiAgICBjYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgIGNhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtRWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29uZmlnID0gY29uZmlnO1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSB0aGlzLl9jb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9jb25maWcuaW5wdXRTZWxlY3RvcikpO1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIGRpc2FibGVCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgfVxyXG5cclxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBjb25zdCBoYXNJbnZhbGlkSW5wdXQgPSB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKTtcclxuICAgIGlmIChoYXNJbnZhbGlkSW5wdXQpIHtcclxuICAgICAgdGhpcy5kaXNhYmxlQnV0dG9uKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodGhpcy5fYnV0dG9uRWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmVycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTsgXHJcbiAgfVxyXG5cclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2hhbmRsZUVzY0tleSA9IHRoaXMuX2hhbmRsZUVzY0tleS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5faGFuZGxlT3ZlcmxheUNsaWNrID0gdGhpcy5faGFuZGxlT3ZlcmxheUNsaWNrLmJpbmQodGhpcyk7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NLZXkpO1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5faGFuZGxlT3ZlcmxheUNsaWNrKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NLZXkpO1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXHJcbiAgICAgIFwibW91c2Vkb3duXCIsXHJcbiAgICAgIHRoaXMuX2hhbmRsZU92ZXJsYXlDbGlja1xyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVFc2NLZXkoZXZlbnQpIHtcclxuICAgIGlmIChldmVudC5rZXkgPT09IFwiRXNjYXBlXCIgfHwgZXZlbnQua2V5ID09PSBcIkVzY1wiKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9oYW5kbGVPdmVybGF5Q2xpY2soZXZlbnQpIHtcclxuICAgIGlmIChldmVudC50YXJnZXQgPT09IHRoaXMuX3BvcHVwRWxlbWVudCkge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLmNsb3NlKCkpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0IH0pIHtcclxuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19pbnB1dFwiKTtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIGNvbnN0IGZvcm1WYWx1ZXMgPSB7fTtcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBmb3JtVmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBmb3JtVmFsdWVzO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldmVudCkgPT4ge1xyXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAge1xyXG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWtlLWxvdWlzZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhdGVtYXIuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFnby5qcGdcIixcclxuICB9LFxyXG5dO1xyXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fc2F2ZS0tYnV0dG9uXCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fc2F2ZV9idXR0b24tLWRpc2FibGVkXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JfdmlzaWJsZVwiLFxyXG59O1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUZvcm1FbGVtZW50ID0gZG9jdW1lbnQuZm9ybXNbXCJlZGl0LXByb2ZpbGUtZm9ybVwiXTtcclxuZXhwb3J0IGNvbnN0IGFkZENhcmRGb3JtRWxlbWVudCA9IGRvY3VtZW50LmZvcm1zW1wiYWRkLWNhcmQtZm9ybVwiXTtcclxuZXhwb3J0IGNvbnN0IG5hbWVJbnB1dCA9IHByb2ZpbGVGb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLm1vZGFsX19pbnB1dF90eXBlX25hbWVcIlxyXG4pO1xyXG5leHBvcnQgY29uc3Qgam9iSW5wdXQgPSBwcm9maWxlRm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5tb2RhbF9faW5wdXRfdHlwZV9kZXNjcmlwdGlvblwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWJ0blwiKTtcclxuZXhwb3J0IGNvbnN0IGFkZE5ld0NhcmRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlUG9wdXBTZWxlY3RvciA9IFwiI2VkaXQtbW9kYWxcIjtcclxuZXhwb3J0IGNvbnN0IGNhcmRQb3B1cFNlbGVjdG9yID0gXCIjYWRkLW1vZGFsXCI7XHJcbmV4cG9ydCBjb25zdCBpbWFnZVBvcHVwU2VsZWN0b3IgPSBcIiNpbWFnZS1tb2RhbFwiO1xyXG5leHBvcnQgY29uc3QgY2FyZFNlY3Rpb25TZWxlY3RvciA9IFwiLmNhcmRzX19saXN0XCI7XHJcbmV4cG9ydCBjb25zdCB1c2VyTmFtZVNlbGVjdG9yID0gXCIucHJvZmlsZV9fdGl0bGVcIjtcclxuZXhwb3J0IGNvbnN0IHVzZXJKb2JTZWxlY3RvciA9IFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCI7XHJcbiIsImltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQge1xyXG4gIGluaXRpYWxDYXJkcyxcclxuICBjb25maWcsXHJcbiAgcHJvZmlsZUZvcm1FbGVtZW50LFxyXG4gIGFkZENhcmRGb3JtRWxlbWVudCxcclxuICBuYW1lSW5wdXQsXHJcbiAgam9iSW5wdXQsXHJcbiAgcHJvZmlsZUVkaXRCdG4sXHJcbiAgYWRkTmV3Q2FyZEJ1dHRvbixcclxuICBwcm9maWxlUG9wdXBTZWxlY3RvcixcclxuICBjYXJkUG9wdXBTZWxlY3RvcixcclxuICBpbWFnZVBvcHVwU2VsZWN0b3IsXHJcbiAgY2FyZFNlY3Rpb25TZWxlY3RvcixcclxuICB1c2VyTmFtZVNlbGVjdG9yLFxyXG4gIHVzZXJKb2JTZWxlY3RvcixcclxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcbmltcG9ydCBcIi4uL3BhZ2VzL2luZGV4LmNzc1wiO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChjYXJkRGF0YSkge1xyXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gbmV3IENhcmQoY2FyZERhdGEsIFwiI2NhcmQtdGVtcGxhdGVcIiwgKHNyYywgdGV4dCkgPT4ge1xyXG4gICAgcG9wdXBXaXRoSW1hZ2Uub3Blbih7IG5hbWU6IHRleHQsIGxpbms6IHNyYyB9KTtcclxuICB9KTtcclxuICByZXR1cm4gY2FyZEVsZW1lbnQuZ2V0VmlldygpO1xyXG59XHJcblxyXG5jb25zdCBwcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgcHJvZmlsZUZvcm1FbGVtZW50KTtcclxuY29uc3QgYWRkQ2FyZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGFkZENhcmRGb3JtRWxlbWVudCk7XHJcbnByb2ZpbGVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuYWRkQ2FyZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xyXG4gIG5hbWVTZWxlY3RvcjogdXNlck5hbWVTZWxlY3RvcixcclxuICBqb2JTZWxlY3RvcjogdXNlckpvYlNlbGVjdG9yLFxyXG59KTtcclxuXHJcbmNvbnN0IHBvcHVwV2l0aEltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlKHtcclxuICBwb3B1cFNlbGVjdG9yOiBpbWFnZVBvcHVwU2VsZWN0b3IsXHJcbn0pO1xyXG5wb3B1cFdpdGhJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgcHJvZmlsZUZvcm1Qb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcclxuICBwb3B1cFNlbGVjdG9yOiBwcm9maWxlUG9wdXBTZWxlY3RvcixcclxuICBoYW5kbGVGb3JtU3VibWl0OiAoeyB0aXRsZSwgZGVzY3JpcHRpb24gfSkgPT4ge1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8odGl0bGUsIGRlc2NyaXB0aW9uKTtcclxuICAgIHByb2ZpbGVGb3JtUG9wdXAuY2xvc2UoKTtcclxuICB9LFxyXG59KTtcclxucHJvZmlsZUZvcm1Qb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgYWRkQ2FyZEZvcm1Qb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcclxuICBwb3B1cFNlbGVjdG9yOiBjYXJkUG9wdXBTZWxlY3RvcixcclxuICBoYW5kbGVGb3JtU3VibWl0OiAoZm9ybURhdGEpID0+IHtcclxuICAgIGNvbnN0IG5ld0NhcmQgPSBjcmVhdGVDYXJkKHsgbmFtZTogZm9ybURhdGEudGl0bGUsIGxpbms6IGZvcm1EYXRhLnVybCB9KTtcclxuICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0obmV3Q2FyZCk7XHJcbiAgICBhZGRDYXJkRm9ybVZhbGlkYXRvci5kaXNhYmxlQnV0dG9uKCk7XHJcbiAgICBhZGRDYXJkRm9ybVBvcHVwLmNsb3NlKCk7XHJcbiAgfSxcclxufSk7XHJcbmFkZENhcmRGb3JtUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcclxuICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcclxuICAgICAgY29uc3QgbmV3Q2FyZCA9IGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xyXG4gICAgICBjYXJkU2VjdGlvbi5hZGRJdGVtKG5ld0NhcmQpO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIGNhcmRTZWN0aW9uU2VsZWN0b3JcclxuKTtcclxuXHJcbmNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcblxyXG5wcm9maWxlRWRpdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGNvbnN0IHsgbmFtZSwgam9iIH0gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gIG5hbWVJbnB1dC52YWx1ZSA9IG5hbWU7XHJcbiAgam9iSW5wdXQudmFsdWUgPSBqb2I7XHJcbiAgcHJvZmlsZUZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbiAgcHJvZmlsZUZvcm1Qb3B1cC5vcGVuKCk7XHJcbn0pO1xyXG5cclxuYWRkTmV3Q2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGFkZENhcmRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIGFkZENhcmRGb3JtUG9wdXAub3BlbigpO1xyXG59KTtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKHsgbmFtZVNlbGVjdG9yLCBqb2JTZWxlY3RvciB9KSB7XHJcbiAgICB0aGlzLl9uYW1lRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2pvYkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYlNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmFtZTogdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgIGpvYjogdGhpcy5fam9iRWxlbWVudC50ZXh0Q29udGVudCxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbyhuZXdOYW1lLCBuZXdKb2IpIHtcclxuICAgIHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50ID0gbmV3TmFtZTtcclxuICAgIHRoaXMuX2pvYkVsZW1lbnQudGV4dENvbnRlbnQgPSBuZXdKb2I7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0pIHtcclxuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcclxuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlXCIpO1xyXG4gICAgdGhpcy5fY2FwdGlvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19kZXNjcmlwdGlvblwiKTtcclxuICB9XHJcblxyXG4gIG9wZW4oeyBuYW1lLCBsaW5rIH0pIHtcclxuICAgIHRoaXMuX2ltYWdlLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgdGhpcy5fY2FwdGlvbi50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB0aGlzLl9yZW5kZXJlcihpdGVtKSk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiX3JlZiIsImNhcmRTZWxlY3RvciIsImhhbmRsZUltYWdlQ2xpY2siLCJuYW1lIiwibGluayIsInRoaXMiLCJfbmFtZSIsIl9saW5rIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX2dldFRlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9jYXJkRWxlbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlTGlrZUljb24iLCJfaGFuZGxlRGVsZXRlQ2FyZCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsInJlbW92ZSIsImdldFZpZXciLCJ0ZXh0Q29udGVudCIsImNhcmRJbWFnZSIsInNyYyIsImFsdCIsIkZvcm1WYWxpZGF0b3IiLCJjb25maWciLCJmb3JtRWxlbWVudCIsIl9jb25maWciLCJfZm9ybUVsZW1lbnQiLCJfc3VibWl0QnV0dG9uIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJfYnV0dG9uRWxlbWVudCIsImRpc2FibGVCdXR0b24iLCJhZGQiLCJkaXNhYmxlZCIsIl90b2dnbGVCdXR0b25TdGF0ZSIsInNvbWUiLCJpbnB1dEVsZW1lbnQiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX3Nob3dJbnB1dEVycm9yIiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2hpZGVJbnB1dEVycm9yIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkYXRpb25NZXNzYWdlIiwiZm9yRWFjaCIsImVuYWJsZVZhbGlkYXRpb24iLCJyZXNldFZhbGlkYXRpb24iLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY0tleSIsImJpbmQiLCJfaGFuZGxlT3ZlcmxheUNsaWNrIiwib3BlbiIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2ZW50Iiwia2V5IiwidGFyZ2V0Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfZm9ybSIsIl9nZXRJbnB1dFZhbHVlcyIsImZvcm1WYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwicHJldmVudERlZmF1bHQiLCJyZXNldCIsInByb2ZpbGVGb3JtRWxlbWVudCIsImZvcm1zIiwiYWRkQ2FyZEZvcm1FbGVtZW50IiwibmFtZUlucHV0Iiwiam9iSW5wdXQiLCJwcm9maWxlRWRpdEJ0biIsImFkZE5ld0NhcmRCdXR0b24iLCJjcmVhdGVDYXJkIiwiY2FyZERhdGEiLCJ0ZXh0IiwicG9wdXBXaXRoSW1hZ2UiLCJwcm9maWxlRm9ybVZhbGlkYXRvciIsImFkZENhcmRGb3JtVmFsaWRhdG9yIiwidXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJqb2JTZWxlY3RvciIsIl9uYW1lRWxlbWVudCIsIl9qb2JFbGVtZW50IiwiZ2V0VXNlckluZm8iLCJqb2IiLCJzZXRVc2VySW5mbyIsIm5ld05hbWUiLCJuZXdKb2IiLCJfaW1hZ2UiLCJfY2FwdGlvbiIsIl9yZWYyIiwicHJvZmlsZUZvcm1Qb3B1cCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJhZGRDYXJkRm9ybVBvcHVwIiwiZm9ybURhdGEiLCJuZXdDYXJkIiwidXJsIiwiY2FyZFNlY3Rpb24iLCJhZGRJdGVtIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwiaXRlbSIsImVsZW1lbnQiLCJwcmVwZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==